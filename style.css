/* We can directly dump our css reset here as well but we ll dump that reset in a diff file */
html {
    background-image: linear-gradient(#FC5E55,#FA4083);
}
/* Since we cannot add two bg images therefore we ll transfer our bg gradient to html tag */
body {
    /* background-color: #FC5E55; */
    /* Adding gradient */
    background-image: url(images/image-lion-background.png);
    font-family: 'Roboto', sans-serif;
    color: white;
    font-size: 1.125rem;
    background-repeat: no-repeat;
    background-position: center top;
    /* background-size:cover ; */
}
.container { 

    /* background-color: rgb(18, 60, 12); */
    /* removing colors */
    /* height: 300px; block wont cover the complete text */
    
    /* In order to have min height use min-height: ; */
    min-height: 300px;
    width: 1024px;
    margin-left: auto;
    margin-right: auto;
    
}
a {
    color: white;
    text-decoration: none;
}
header {
    /* background-color: rgb(41, 96, 36); */
    display: flex;
    justify-content:space-between;
    align-items: center;
    padding-bottom: 20px;
    padding-top:20px;
    border-bottom: 1px solid lightgray;
}
main {
    
    min-height: 300px;
    display: flex;
    align-items: center; /*This aligns the boxes in the middle vertically*/
}
/* Editing main2 for our contact us page */
.main2 {
    min-height: 300px;

}
.main2 h1 {
    padding-top: 30px;
}
.main2 p {
    padding-top: 30px;
}
.cards {
    display: flex;
    justify-content: space-between;
    text-align: center;
   /* to have space between we use justify-content:space between; */
}
/* Card 1 , c ard 2 and card 3 will stack up vertically in order to align them horizontally we use flexbox and all the cards that need to be aligned hor. should be inside a parent header here cards so in cards we are gonna flex them using display flex */
.card1 {
        background-image: url(images/image-background-card1.jpg);
        min-height: 250px;
        width: 30%;
        background-size: cover;
        background-position: bottom;
        text-decoration: none;
        box-shadow: 5px 10px /*blur*/ 5px rgba(0, 0, 0, 0.295);
}
.card2 {
    background-image: url(images/image-background-card2.jpg);
    min-height:250px;
    width: 30%;
    background-size: cover;
    background-position: bottom;
    box-shadow: 5px 10px /*blur*/ 5px rgba(0, 0, 0, 0.295);
}
.card3 {
    background-image: url(images/image-background-card3.jpg);
    min-height: 250px;
    width: 30%;
    background-position: bottom;
    background-size: cover;
    box-shadow: 5px 10px /*blur*/ 5px rgba(0, 0, 0, 0.295);
}

.herobox1 {
    /* background-color:cornflowerblue; */
    width: 50%;
     flex:2;   /*this line gives the herobox1 2 parts of our main block */
     padding-right: 100px;
}

.herobox2 {
    /* background-color: mintcream; */
    width: 50%;
    flex: 1; /*this line gives the herobox1 1 part of our main block */
}
h1 {
    font-size: 3.25rem;
    font-family: 'Playfair Display', serif;
    margin-bottom: 1rem;
    text-shadow: 0px 3px /*blur*/ 5px rgba(0, 0, 0, 0.45); 
}
/* since h1 is more specific that body tag therefore no matter where h1 is placed in the ccs file h1 will be preferred  */ 
h2 {
    font-size: 2rem;
    font-family: 'Playfair Display', serif;
    margin-bottom: 0.5rem;
    margin-top: 10px;

}
p {
    line-height:1.75rem ;
    margin-bottom: 0.5rem;

}
.card1,.card2,.card3 {
    padding: 25px 30px 20px 30px;
    /* box-sizing: border-box; */
    box-sizing: border-box;
}
.cards p {
    font-size: 0.85rem;
    line-height: 1.2rem;
      /*margin: 10px 30px 20px 30px;  top then right then bottom then left  */
/* Basically we treat icons as fonts  */
margin-top: 10px;
}
.cards i {
    font-size: 100px;

}

.mybutton {
    background-color: white;
    color: #FA4083;
    font-family: 'Playfair Display', serif;
    padding: 11px 25px; /*11 px to top and bottom & 25px to right and left*/
    display: inline-block;
    margin-top: 15px;
/* Adding rounded corners */
    border-radius: 4px; /*Adds to every corner*/
/* Adding drop shadows */
    box-shadow: 0px 3px /*blur*/ 5px rgba(0, 0, 0, 0.295); /*5 px to right and 5 px to left respec.*/ /*box shadow for boxes , text shadow for texts*/
}

/* Changing the hover state of a button by creating a pseudoclass */
.mybutton:hover /*hover state of mybutton*/ {
    background-color: rgb(22, 230, 115);
    transition-duration: 1s;

}

/* 
h , p , ul,ol these are block level things which means that they are gonna push the next thing in the next block while the a tag are inline which means that they are not gonna push the next things into the next block a tags adjust themselves into the same block hence we cannot use margin bottom,top directly */

.herobox2 img {
    border-radius: 2px;
}
nav a {
    border: 1px solid white;
    margin-left: -1px;
    padding: 10px 30px;
    font-family: 'Playfair Display', serif;
}
.testimonials {
    display: flex;
    /* by default al 4 boxes will be horzintally aligned to avoid this ie two boxes in one row two in another we use flexwrap : wrap */
    flex-wrap: wrap;
    justify-content: space-between;
    margin-bottom: 50px;

}
.tbox {
    border: 1px solid white;
    width: 47%;
    padding: 50px;
    box-sizing: border-box;
    margin-top: 50px;
}

/* using to pseudo classes to select things  */

.tbox p:last-of-type {
    margin-left: 10px;
    font-size:11 ;
}
.main2 p {margin-bottom: 10px;}
.inputwrapper {
    margin-bottom: 10px;
}
.inputwrapper p {
    margin-bottom: 10px;
}

input[type=text] , input[type=email] , textarea {
    padding: 12px 20px;
    width:90%;
    font-family: 'Roboto', sans-serif;
    font-size:13px;
}
.newline {
    display: block;
    margin-bottom: 10px;
}
.margin-right {margin-right: 20px;}
form {
    margin: 20px 30px;
}